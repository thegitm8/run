#!/usr/bin/env bash
set -e

# find local installation of script
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do
    DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
done

# export script globals
# shellcheck disable=SC2155
export SCRIPT_DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
export NODE_ENV=production

if [ -f "package.json" ]; then
    TMP_NAME="$(jq -r .name package.json | tr / _)"
    export PACKAGE_NAME="${TMP_NAME//@}"
else
    export PACKAGE_NAME="run_app"
fi

loadScript() {
    LOCAL_SCRIPT=$1 && shift
    source "$SCRIPT_DIR/$LOCAL_SCRIPT" "$@"
}

loadScript helpers/logError
loadScript helpers/logMessage
loadScript helpers/requiredDependencies
loadScript helpers/showHelp
loadScript db/startdb
loadScript db/mongo
loadScript db/influx

requiredDependencies docker jq node npm

# exit with help if no arguments are specified
if [[ $# -eq 0 ]] ; then showHelp; fi


# parse arguments
while test $# -gt 0; do # check options
    case "$1" in
        -h|--help)
            showHelp
            ;;
        -d)
            shift
            export NODE_ENV=development
            ;;
        -w|--withdb)
            shift
            startdb $1 & shift
            ;;
        *)
            break
            ;;
    esac
done

SCRIPT=$1 && shift

# if run has a script with the provided name, run it
if [ -f "$SCRIPT_DIR/scripts/$SCRIPT" ]; then

    loadScript "scripts/$SCRIPT" "$@"

else # if run doesn't have this script, run "npm run" instead

    # shellcheck disable=SC2016
    SCRIPT_CONTENT=$(jq -r --arg SCRIPT "$SCRIPT" '.scripts[$SCRIPT]' package.json)

    if [ "$SCRIPT_CONTENT" == "null" ]; then
        showHelp "Command \"$SCRIPT\" not found on RUN or in package.json."
    fi

    npm run "$SCRIPT"

fi
