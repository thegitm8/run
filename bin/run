#!/usr/bin/env bash
set -e

function findRunScriptDirectory() {
    # find local installation of script
    local DIR
    local SOURCE

    SOURCE="${BASH_SOURCE[0]}"
    while [ -h "$SOURCE" ]; do
        DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
        SOURCE="$(readlink "$SOURCE")"
        [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
    done

    echo "$( cd -P "$( dirname "$SOURCE" )" && pwd )"
}

RUN_SCRIPT_DIR="$(findRunScriptDirectory)"


function require() { local SCRIPT=$1 && shift && source "$RUN_SCRIPT_DIR/$SCRIPT" "$@"; }

require helpers/logError
require helpers/logMessage
require helpers/requiredDependencies
require helpers/showHelp
require db/startdb

requiredDependencies node npm
if [[ $# -eq 0 ]] ; then showHelp; fi

################################################

function run_main() {

    export NODE_ENV=production

    if [ -f "package.json" ]; then

        TMP_NAME=$(node -e "console.log(require('./package.json').name)" | tr / _)
        export PACKAGE_NAME="${TMP_NAME//@}"

    else

        export PACKAGE_NAME="run_app"

    fi

    while test $# -gt 0; do # check options
        case "$1" in
            -h|--help)
                showHelp
                ;;
            -d)
                shift
                export NODE_ENV=development
                ;;
            -w|--withdb)
                shift
                startdb $1 & shift
                ;;
            *)
                break
                ;;
        esac
    done

    local SCRIPT=$1 && shift

    if [ -f "package.json" ]; then

        SECOND_LEVEL_SCRIPT="$SCRIPT:$1"
        COMMAND=$(node -e "console.log(require('./package.json').scripts['$SCRIPT'] || '')")
        SECOND_LEVEL_COMMAND=$(node -e "console.log(require('./package.json').scripts['"$SECOND_LEVEL_SCRIPT"'] || '')")

        if [ ! -z "$SECOND_LEVEL_COMMAND" ]; then
            shift
            npm --silent run "$SECOND_LEVEL_SCRIPT" -- $@
            exit $?

        elif [ ! -z "$COMMAND" ]; then
            npm --silent run "$SCRIPT" -- $@
            exit $?
        fi


    fi

    # if run has a script with the provided name, run it
    if [ -f "$RUN_SCRIPT_DIR/scripts/$SCRIPT" ]; then
        require "scripts/$SCRIPT" "$@"
        exit $?

    fi
}

run_main $@
